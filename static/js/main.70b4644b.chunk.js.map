{"version":3,"sources":["react-request-hook/request.ts","react-request-hook/requestContext.ts","react-request-hook/useRequest.ts","react-request-hook/useResource.ts","useDebounce.tsx","api.ts","index.tsx","components/SearchUser.tsx"],"names":["request","config","paylaod","RequestContext","createContext","RequestProvider","Provider","Consumer","useRequest","fn","axiosInstance","useContext","_useState","useState","_useState2","Object","slicedToArray","sources","setSources","removeCancelToken","response","prevSources","filter","source","token","cancelToken","useCallback","apply","arguments","axios","CancelToken","concat","toConsumableArray","cancel","ready","objectSpread","then","data","catch","error","message","code","isCancel","createRequestError","clear","map","clearRef","useRef","useEffect","current","hasPending","length","useResource","defaultParams","_useRequest","_useRequest2","createRequest","setError","_useState3","_useState4","setData","_len","args","Array","_key","_createRequest","canceller","isLoading","useDebounce","value","delay","undefined","currentValue","setCurrentValue","interval","clean","clearInterval","setTimeout","api","getUsers","page","method","url","searchUser","searchText","baseURL","create","ReactDOM","react","input","setInput","_useResource","issues","react_default","a","createElement","Box","TextInput","autoCapitalize","onChange","ev","target","JSON","stringify","_useResource3","_useResource4","search","document","getElementById"],"mappings":"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","file":"static/js/main.70b4644b.chunk.js","sourcesContent":["import axios, {AxiosRequestConfig, AxiosError, Canceler} from 'axios';\n\nexport type Arguments<T> = T extends (...args: infer A) => any ? A : never;\n\nexport interface Resource<TPayload> extends AxiosRequestConfig {\n  payload?: TPayload;\n}\n\nexport interface Request {\n  (...args: any[]): Resource<any>;\n}\n\nexport type Payload<TRequest extends Request> = ReturnType<TRequest>['payload'];\n\nexport interface RequestFactory<TRequest extends Request> {\n  (...args: Arguments<TRequest>): {\n    cancel: Canceler;\n    ready: () => Promise<Payload<TRequest>>;\n  };\n}\n\nexport interface RequestDispatcher<TRequest extends Request> {\n  (...args: Arguments<TRequest>): Canceler;\n}\n\n// Normalize the error response returned from our hooks\nexport interface RequestError {\n  data: any;\n  message: string;\n  code?: string;\n  isCancel: boolean;\n}\n\nexport function request<TPayload>(\n  config: AxiosRequestConfig,\n  // we use 'payload' to enable non-ts applications to leverage type safety and\n  // as a argument sugar that allow us to extract the payload type easily\n  // @ts-ignore\n  paylaod?: TPayload,\n): Resource<TPayload> {\n  return config;\n}\n\nexport function createRequestError(error: AxiosError): RequestError {\n  const data = error.response ? error.response.data : null;\n  return {\n    data,\n    message: error.message,\n    code: (data && data.code) || error.code,\n    isCancel: axios.isCancel(error),\n  };\n}\n","import {createContext} from 'react';\nimport {AxiosInstance} from 'axios';\n\nexport const RequestContext = createContext<AxiosInstance | null>(null);\nexport const RequestProvider = RequestContext.Provider;\nexport const RequestConsumer = RequestContext.Consumer;\n","import {useState, useCallback, useContext, useRef, useEffect} from 'react';\nimport axios, {\n  AxiosError,\n  CancelTokenSource,\n  AxiosResponse,\n  Canceler,\n} from 'axios';\nimport {\n  createRequestError,\n  RequestFactory,\n  Request,\n  Arguments,\n} from './request';\nimport {RequestContext} from './requestContext';\n\nexport type UseRequestResult<TRequest extends Request> = [\n  {\n    hasPending: boolean;\n    clear: Canceler;\n  },\n  RequestFactory<TRequest>\n];\n\nexport function useRequest<TRequest extends Request>(\n  fn: TRequest,\n): UseRequestResult<TRequest> {\n  const axiosInstance = useContext(RequestContext);\n  const [sources, setSources] = useState<CancelTokenSource[]>([]);\n\n  const removeCancelToken = (response?: AxiosResponse) => {\n    if (response) {\n      setSources(prevSources =>\n        prevSources.filter(\n          source => source.token !== response.config.cancelToken,\n        ),\n      );\n    }\n  };\n\n  const request = useCallback(\n    (...args: Arguments<TRequest> | any[]) => {\n      const config = fn(...args);\n      const source = axios.CancelToken.source();\n      setSources(prevSources => [...prevSources, source]);\n      return {\n        cancel: source.cancel,\n        ready: () =>\n          axiosInstance!({...config, cancelToken: source.token})\n            .then(response => {\n              removeCancelToken(response);\n              return response.data;\n            })\n            .catch((error: AxiosError) => {\n              removeCancelToken(error.response);\n              throw createRequestError(error);\n            }),\n      };\n    },\n    [fn], // TODO: Test when it changes\n  );\n\n  const clear = useCallback(\n    (message?: string) => {\n      sources.map(source => source.cancel(message));\n      setSources([]);\n    },\n    [sources],\n  );\n\n  const clearRef = useRef(clear);\n  useEffect(() => {\n    clearRef.current = clear;\n  });\n\n  useEffect(() => {\n    return () => {\n      clearRef.current();\n    };\n  }, []);\n\n  return [\n    {\n      clear: () => clearRef.current(),\n      hasPending: sources.length > 0,\n    },\n    request,\n  ];\n}\n","import {useEffect, useState, useCallback} from 'react';\nimport {Canceler} from 'axios';\nimport {useRequest} from './useRequest';\nimport {\n  Payload,\n  RequestError,\n  Request,\n  RequestDispatcher,\n  Arguments,\n} from './request';\n\nexport type useResource<TRequest extends Request> = [\n  {\n    data: Payload<TRequest> | null;\n    error: RequestError | null;\n    isLoading: boolean;\n    cancel: Canceler;\n  },\n  RequestDispatcher<TRequest>\n];\n\nexport type CreateUseRequestOptions = {\n  cancelOnUnmount?: boolean;\n};\n\nexport function useResource<TRequest extends Request>(\n  fn: TRequest,\n  defaultParams?: Arguments<TRequest>,\n): useResource<TRequest> {\n  const [{clear}, createRequest] = useRequest(fn);\n  const [error, setError] = useState<RequestError | null>(null);\n  const [data, setData] = useState<Payload<TRequest> | null>(null);\n\n  const request = useCallback((...args: Arguments<TRequest> | any[]) => {\n    clear('A new request has been made before completing the last one');\n    const {ready, cancel} = createRequest(...(args as Arguments<TRequest>));\n    ready()\n      .then(setData)\n      .catch((error: RequestError) => {\n        if (!error.isCancel) {\n          setError(error);\n        }\n      });\n    return cancel;\n  }, []);\n\n  useEffect(() => {\n    let canceller: Canceler;\n    if (defaultParams) {\n      canceller = request(...defaultParams);\n    }\n    return () => {\n      if (canceller) {\n        canceller();\n      }\n    };\n  }, defaultParams);\n\n  return [\n    {\n      data,\n      error,\n      cancel: clear,\n      isLoading: !data && !error,\n    },\n    request,\n  ];\n}\n","import {useState, useEffect, useRef} from 'react';\n\nexport default function useDebounce(value: string, delay: number = 600) {\n  const [currentValue, setCurrentValue] = useState(value);\n  const interval = useRef<NodeJS.Timeout | null>(null);\n\n  const clean = () => {\n    if (interval.current !== null) {\n      clearInterval(interval.current);\n    }\n  };\n\n  useEffect(() => {\n    interval.current = setTimeout(() => {\n      setCurrentValue(value);\n    }, delay);\n    return clean;\n  }, [value, delay]);\n\n  useEffect(() => clean, []);\n\n  return currentValue;\n}\n","import {request} from './react-request-hook';\n\nexport type User = {\n  id: number;\n  first_name: string;\n};\n\ntype GetUsersResponse = {\n  page: number;\n  per_page: number;\n  total: number;\n  total_pages: number;\n  data: User[];\n};\n\nconst api = {\n  getUsers: (page: number = 1) => {\n    return request<GetUsersResponse>({\n      method: 'GET',\n      url: `/users?page=${page}`,\n    });\n  },\n\n  searchUser: (searchText: string) => {\n    return request({\n      method: 'GET',\n      baseURL: 'https://5c564f1ed293090014c0ee3e.mockapi.io/api/v1',\n      url: `/users?filter=${searchText}&limit=10`,\n    });\n  },\n};\n\nexport default api;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n// import App from './App';\nimport {RequestProvider} from './react-request-hook';\nimport axios from 'axios';\nimport SearchUser, {SearchUserOptmized} from './components/SearchUser';\n// import Pagination from './Paginated';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://reqres.in/api',\n});\n\n// axiosInstance.interceptors.request.use(config => {\n//   return new Promise(resolve => {\n//     setTimeout(() => {\n//       resolve(config);\n//       console.count('[REQUEST CALLED]');\n//     }, 6000);\n//   });\n// });\n\nReactDOM.render(\n  <RequestProvider value={axiosInstance}>\n    <SearchUser />\n    <SearchUserOptmized />\n  </RequestProvider>,\n  document.getElementById('root'),\n);\n","import React, {useState, useEffect} from 'react';\nimport {Box, TextInput} from 'grommet';\nimport {Canceler} from 'axios';\nimport {useResource} from '../react-request-hook';\nimport useDebounce from '../useDebounce';\nimport api from '../api';\n\nexport default function SearchUser() {\n  const [input, setInput] = useState<string>('Gabriel');\n  const searchText = useDebounce(input);\n  const [issues] = useResource(api.searchUser, [searchText]);\n  return (\n    <Box>\n      <TextInput\n        autoCapitalize=\"words\"\n        onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n          setInput(ev.target.value);\n        }}\n      />\n      <Box>{JSON.stringify(issues.data)}</Box>\n    </Box>\n  );\n}\n\nexport function SearchUserOptmized() {\n  const [input, setInput] = useState<string>('Gabriel');\n  const searchText = useDebounce(input);\n  const [issues, search] = useResource(api.searchUser);\n\n  useEffect(() => {\n    let cancel: Canceler;\n    if (searchText === input) {\n      cancel = search(searchText);\n    }\n    return () => {\n      if (cancel) {\n        cancel();\n      }\n    };\n  }, [searchText, input]);\n\n  return (\n    <Box>\n      <TextInput\n        value={input}\n        onChange={(ev: React.ChangeEvent<HTMLInputElement>) => {\n          setInput(ev.target.value);\n        }}\n      />\n      <Box>{JSON.stringify(issues)}</Box>\n    </Box>\n  );\n}\n"],"sourceRoot":""}